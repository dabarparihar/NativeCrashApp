apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    // Load keystore
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    compileSdkVersion Versions.compileSdk

    defaultConfig {
        applicationId "com.jacksoncheek.nativecrashapp"
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.targetSdk
        versionCode Versions.versionCode
        versionName Versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }

        release {
            minifyEnabled true
            proguardFiles 'proguard-android.pro', 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions "native"

    productFlavors {
        working {
            dimension "native"
            applicationIdSuffix ".working"
            versionNameSuffix "-working"
            resValue "string", "app_name", "WorkingNativeCrashApp"
        }

        broken {
            dimension "native"
            applicationIdSuffix ".broken"
            versionNameSuffix "-broken"
            resValue "string", "app_name", "BrokenNativeCrashApp"
        }
    }
}

dependencies {
    implementation Libs.kotlin
    implementation Libs.supportAppCompat
    implementation Libs.supportConstraintLayout

    testImplementation TestLibs.jUnit

    androidTestImplementation TestLibs.androidTestRunner
    androidTestImplementation TestLibs.espresso
}

// Working Dependencies
dependencies {
     workingImplementation project(Projects.devicepropertieslib)
}

// Broken Dependencies
dependencies {
     brokenImplementation project(Projects.brokendevicepropertieslib)
}